# coding: utf-8

"""
    EHR Explorer Processor API

    API for the EHR Explorer Processor microservice  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: vivod.jernej@gmail.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import generated_client
from generated_client.models.value_transformation_spec_entry import ValueTransformationSpecEntry  # noqa: E501
from generated_client.rest import ApiException

class TestValueTransformationSpecEntry(unittest.TestCase):
    """ValueTransformationSpecEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ValueTransformationSpecEntry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = generated_client.models.value_transformation_spec_entry.ValueTransformationSpecEntry()  # noqa: E501
        if include_optional :
            return ValueTransformationSpecEntry(
                entity = 'AdmissionsEntity', 
                _property = '0', 
                transform = generated_client.models.transform.Transform(
                    kind = 'ROUNDING', 
                    rounding_multiple = 20.0, 
                    date_diff_round_type = 'YEAR', )
            )
        else :
            return ValueTransformationSpecEntry(
                entity = 'AdmissionsEntity',
                _property = '0',
                transform = generated_client.models.transform.Transform(
                    kind = 'ROUNDING', 
                    rounding_multiple = 20.0, 
                    date_diff_round_type = 'YEAR', ),
        )

    def testValueTransformationSpecEntry(self):
        """Test ValueTransformationSpecEntry"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
