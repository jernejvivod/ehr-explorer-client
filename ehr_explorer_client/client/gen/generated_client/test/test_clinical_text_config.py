# coding: utf-8

"""
    EHR Explorer Processor API

    API for the EHR Explorer Processor microservice  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: vivod.jernej@gmail.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import generated_client
from generated_client.models.clinical_text_config import ClinicalTextConfig  # noqa: E501
from generated_client.rest import ApiException

class TestClinicalTextConfig(unittest.TestCase):
    """ClinicalTextConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ClinicalTextConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = generated_client.models.clinical_text_config.ClinicalTextConfig()  # noqa: E501
        if include_optional :
            return ClinicalTextConfig(
                foreign_key_path = [
                    '["AdmissionsEntity","NoteEventsEntity"]'
                    ], 
                text_property_name = 'text', 
                clinical_text_entity_id_property_name = 'rowId', 
                clinical_text_date_time_properties_names = [
                    '0'
                    ], 
                root_entity_datetime_property_for_cutoff = 'outTime', 
                root_entities_spec = generated_client.models.root_entities_spec.RootEntitiesSpec(
                    root_entity = 'AdmissionsEntity', 
                    id_property = 'hadmId', 
                    ids = [
                        56
                        ], ), 
                clinical_text_extraction_duration_spec = generated_client.models.clinical_text_extraction_duration_spec.ClinicalTextExtractionDurationSpec(
                    first_minutes = 56, )
            )
        else :
            return ClinicalTextConfig(
                foreign_key_path = [
                    '["AdmissionsEntity","NoteEventsEntity"]'
                    ],
                text_property_name = 'text',
                root_entities_spec = generated_client.models.root_entities_spec.RootEntitiesSpec(
                    root_entity = 'AdmissionsEntity', 
                    id_property = 'hadmId', 
                    ids = [
                        56
                        ], ),
        )

    def testClinicalTextConfig(self):
        """Test ClinicalTextConfig"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
